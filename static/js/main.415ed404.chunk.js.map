{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js"],"names":["Recipe","title","ingredients","calories","image","className","Math","floor","map","ingredient","index","text","src","alt","App","useState","question","setQuestion","recipes","setRecipes","search","setSearch","useEffect","getRecipes","fetch","then","response","json","data","console","log","hits","catch","error","onSubmit","e","preventDefault","type","value","onInput","target","onKeyPress","key","length","recipe","label","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAkBeA,MAhBf,YAAqD,IAApCC,EAAmC,EAAnCA,MAAMC,EAA6B,EAA7BA,YAAYC,EAAiB,EAAjBA,SAASC,EAAQ,EAARA,MACxC,OACI,sBAAKC,UAAU,SAAf,UACI,wCAAWJ,KACX,+BACIK,KAAKC,MAAMJ,GADf,eAGA,qBAAIE,UAAU,cAAd,UACI,8CACCH,EAAYM,KAAI,SAACC,EAAWC,GAAZ,OAAoB,6BAAiBD,EAAWE,MAAnBD,SAElD,qBAAKE,IAAKR,EAAOS,IAAI,GAAER,UAAU,c,MCkE9BS,MAxEf,WAEE,MAA6BC,mBAAS,WAAtC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA2BF,mBAAS,IAApC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAyBJ,mBAAS,IAAlC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA2BN,oBAAS,GAApC,6BACAO,qBAAU,WACRC,MACA,CAACP,IAEH,IAAMO,EAAW,WACbC,MAAM,mCAAD,OAAoCR,EAApC,mBAbG,WAaH,oBAZK,qCAaPS,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAG,GACJC,QAAQC,IAAIF,EAAKG,MACdH,EAAKG,MAAM,KAEZZ,EAAWS,EAAKG,MAChBV,EAAU,QAKbW,OAAM,SAAAC,GACLJ,QAAQC,IAAI,YAuBpB,OACE,sBAAKzB,UAAU,MAAf,UACC,uBAAMA,UAAU,cAAc6B,SArBf,SAACC,GACjBA,EAAEC,iBACFP,QAAQC,IAAI,UAAUV,GACX,IAARA,GAEDH,EAAYG,IAgBb,UACE,uBAAOiB,KAAK,OAAOhC,UAAU,eAAeiC,MAAOlB,EAAQmB,QAXhD,SAACJ,GACfd,EAAUc,EAAEK,OAAOF,QAUgEG,WARnE,SAACN,GACH,UAAVA,EAAEO,KACNzB,EAAYG,MAOT,wBAAQf,UAAU,aAAlB,uBAEH,qBAAIA,UAAU,aAAd,sBAAqCW,EAArC,MAAkDE,EAAQyB,OAA1D,eACC,qBAAKtC,UAAU,YAAf,SAEOa,EAAQV,KAAI,SAAAoC,GACX,OAAO,cAAC,EAAD,CAAQ3C,MAAO2C,EAAOA,OAAOC,MACnC3C,YAAa0C,EAAOA,OAAO1C,YAC3BC,SAAUyC,EAAOA,OAAOzC,SACxBC,MAAOwC,EAAOA,OAAOxC,OAChBwC,EAAOA,OAAOC,gBC1DlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.415ed404.chunk.js","sourcesContent":["import React from 'react'\r\nimport styles from './recipe.css'\r\nfunction Recipe({title,ingredients,calories,image}) {\r\n    return (\r\n        <div className=\"recipe\">\r\n            <h1>Name: {title}</h1>\r\n            <h3>\r\n               {Math.floor(calories)} calories\r\n            </h3>\r\n            <ul className=\"ingredients\">\r\n                <h1>ingredients:</h1>\r\n                {ingredients.map((ingredient,index)=><li key={index}>{ingredient.text}</li>)}\r\n            </ul>\r\n            <img src={image} alt=\"\"className=\"image\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recipe\r\n","import react,{useState,useEffect} from 'react';\nimport Recipe from './Recipe.js'\nimport './App.css';\n\n\nconst APP_ID ='9f34fd51'\nconst APP_KEY = '4b327b147dd52b50b6b738b5fbd904ad'\nfunction App() {\n\n  const [question,setQuestion]=useState(\"chicken\")\n  const [recipes,setRecipes]=useState([])\n  const [search,setSearch]=useState(\"\")\n  const [isValid,setIsValid]=useState(false)\n  useEffect(()=>{\n    getRecipes();\n  },[question])\n\n  const getRecipes=()=>{\n      fetch(`https://api.edamam.com/search?q=${question}&app_id=${APP_ID}&app_key=${APP_KEY}`)\n        .then(response=>{\n          return response.json()\n        })\n        .then(data=>{\n          console.log(data.hits)\n          if(data.hits!=[])\n          {\n            setRecipes(data.hits)\n            setSearch(\"\")\n          }\n         \n         \n        })\n        .catch(error=>{\n          console.log('fail')\n        })\n  }\n\n  const getQuestion=(e)=>{\n    e.preventDefault()\n    console.log('search:',search)\n    if(search!=\"\")\n    {\n      setQuestion(search)\n      \n    }\n    \n  }\n\n  const getInputs=(e)=>{\n    setSearch(e.target.value)\n  }\n  const handlePress=(e)=>{\n    if (e.key === 'Enter')\n    setQuestion(search)\n  }\n\n  return (\n    <div className=\"App\">\n     <form className=\"search_wrap\" onSubmit={getQuestion}>\n       <input type=\"text\" className=\"input_search\" value={search} onInput={getInputs}  onKeyPress={handlePress}/>\n       <button className=\"search_btn\">Search</button>\n     </form>\n    <h1 className=\"suggestion\">Suggest: {question} - {recipes.length} results </h1>\n     <div className=\"body_wrap\">\n          {\n            recipes.map(recipe => {\n             return <Recipe title={recipe.recipe.label}\n              ingredients={recipe.recipe.ingredients} \n              calories={recipe.recipe.calories}\n              image={recipe.recipe.image}\n              key={recipe.recipe.label}\n              />\n            })\n          }\n     </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}